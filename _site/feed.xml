<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mido</title>
    <description>Stay hungry, Stay foolish.</description>
    <link>http://vumanhcuongit.github.io/</link>
    <atom:link href="http://vumanhcuongit.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Ruby methods: all? vs any?</title>
        <description>&lt;h3 id=&quot;all&quot;&gt;&lt;code&gt;all?&lt;/code&gt;:&lt;/h3&gt;
&lt;p&gt;The method returns true if the block &lt;strong&gt;NEVER&lt;/strong&gt; returns false or nil.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;any&quot;&gt;&lt;code&gt;any?&lt;/code&gt;:&lt;/h3&gt;

&lt;p&gt;The method returns true if the block &lt;strong&gt;EVER&lt;/strong&gt; returns a value other than false or nil.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;deep-magic&quot;&gt;Deep magic:&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;[].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all?&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So since the block never gets called, of course it never returns false or nil, thus all returns true.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;[].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since the block never gets called, it never returns a value other than false or nil, thus any returns false.&lt;/p&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/ruby/2014/08/27/ruby-methods-all-vs-any/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/ruby/2014/08/27/ruby-methods-all-vs-any/</guid>
      </item>
    
      <item>
        <title>RSpec: allow vs expect</title>
        <description>&lt;p&gt;You know &lt;strong&gt;allow&lt;/strong&gt; and &lt;strong&gt;expect&lt;/strong&gt; are used in rspec-mocks, but you are confused with them ?. Don’t worry, I’ll explain them briefly.&lt;/p&gt;

&lt;h3 id=&quot;allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;book&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The RSpec Book&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You ASSUME that &lt;strong&gt;book object&lt;/strong&gt; has a method &lt;strong&gt;title&lt;/strong&gt; and it’ll return “The RSpec Book” when this method’s called.&lt;/p&gt;

&lt;h3 id=&quot;expect&quot;&gt;&lt;code&gt;expect&lt;/code&gt;:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;book&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The RSpec Book&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;The RSpec Book&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This example’s a bit different. You EXPECT that when &lt;strong&gt;book object&lt;/strong&gt;  calls &lt;strong&gt;title method&lt;/strong&gt;, it’ll return that string “The RSpec Book”.&lt;/p&gt;

&lt;h2 id=&quot;sum-up&quot;&gt;Sum up:&lt;/h2&gt;
&lt;p&gt;A big difference between them is that &lt;strong&gt;ASSUME&lt;/strong&gt; and &lt;strong&gt;EXPECT&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;deep-magic&quot;&gt;Deep magic:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;why do we use ‘allow’ ?&lt;/strong&gt;
To answer this question, we should refer to the concept of Test Doubles:
&amp;gt; A test double is an object that stands in for another object in your system during a code example&lt;/p&gt;

&lt;p&gt;This object isn’t existed in your real system, it doesn’t own methods and attributes. So we need to use &lt;strong&gt;allow&lt;/strong&gt; to assume that this object has some methods and returns predefined values.&lt;/p&gt;

&lt;p&gt;That’s all, and thanks for your concern. If you have any questions, please don’t hesitate to ask me :).&lt;/p&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/ruby/2014/08/27/rspec-allow-vs-expect/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/ruby/2014/08/27/rspec-allow-vs-expect/</guid>
      </item>
    
      <item>
        <title>Prax for ROR in Ubuntu</title>
        <description>&lt;p&gt;You know Prax ? if you don’t, close this page and enjoy your life :) &lt;br /&gt;
You’re tired  when setting Prax. OK, I used to be like you :)&lt;/p&gt;

&lt;p&gt;I followed this [instructions]  (http://ysbaddaden.github.io/prax/) to setup Prax on my computer, but it didn’t work.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
myapp.dev   #failed
myapp.dev:3000 #successful
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;myapp.dev:3000&lt;/code&gt; is n’t what I want. You can follow the below steps to setup Prax successfully:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start rails server&lt;/li&gt;
  &lt;li&gt;cd /opt/prax/bin&lt;/li&gt;
  &lt;li&gt;prax start&lt;/li&gt;
  &lt;li&gt;ln -sf ~/myapp  ~/.prax/&lt;/li&gt;
  &lt;li&gt;firefox http://myapp.dev&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WOAH! Là lá la la&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/92a0e6c8cfa3aae0e70f442fc915263ee59bf5bf/687474703a2f2f6d656469612e74756d626c722e636f6d2f74756d626c725f6c74757a6a766251364c31717a677078392e676966&quot; alt=&quot;alt text&quot; title=&quot;Amazing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next time, you just start rails server and run &lt;code&gt;prax start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s all, and thanks for your concern. If you have any questions, please don’t hesitate to ask me :).&lt;/p&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/ruby/2014/08/27/prax-for-ror-in-ubuntu/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/ruby/2014/08/27/prax-for-ror-in-ubuntu/</guid>
      </item>
    
      <item>
        <title>Lite Markdown cheat sheet</title>
        <description>&lt;p&gt;In order to help users can using &lt;a href=&quot;http://en.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;, I use cheat sheet to help them. In addition, it should be &lt;strong&gt;small&lt;/strong&gt; and includes some important references, so I remove some redundant cases.&lt;/p&gt;

&lt;p&gt;You can click &lt;a href=&quot;http://bit.ly/lite-markdown-cheatsheet&quot;&gt;here&lt;/a&gt; to download. By the way, I have &lt;a href=&quot;http://markdown-lite.herokuapp.com/&quot;&gt;this demo&lt;/a&gt; using this file.&lt;/p&gt;

&lt;p&gt;I included CSS in this file too (because I’m lazy), hope you ignore this problem :)&lt;/p&gt;

&lt;p&gt;p/s: I wrote a &lt;a href=&quot;https://coderwall.com/p/dnnlea?i=5&amp;amp;p=1&amp;amp;q=author%3Avumanhcuongit&amp;amp;t%5B%5D=vumanhcuongit&quot;&gt;new tip&lt;/a&gt; about truncate a string written by Markdown format.
References: I complied from a &lt;a href=&quot;http://assemble.io/docs/Cheatsheet-Markdown.html&quot;&gt;cheat sheet&lt;/a&gt;. &lt;/p&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/general/2014/08/27/lite-markdown-cheat-sheet/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/general/2014/08/27/lite-markdown-cheat-sheet/</guid>
      </item>
    
      <item>
        <title>How to truncate a string that&#39;s Markdown format</title>
        <description>&lt;p&gt;Regarding this &lt;a href=&quot;https://coderwall.com/p/nzrqva?i=2&amp;amp;p=1&amp;amp;q=author%3Avumanhcuongit&amp;amp;t%5B%5D=vumanhcuongit&quot;&gt;Markdown tip&lt;/a&gt;. Today, I got a trouble about truncating  string written in Markdown format.&lt;/p&gt;

&lt;p&gt;Firstly, I just used &lt;code&gt;truncate(markdown(text), length: 100)&lt;/code&gt; but it doesn’t work well.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;An h1 header&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Paragraphs are separated by a blank line.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;2nd paragraph. &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;It...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, I tried this one and it works :)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;truncate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/2014/08/27/how-to-truncate-a-string-thats-markdown-format/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/2014/08/27/how-to-truncate-a-string-thats-markdown-format/</guid>
      </item>
    
      <item>
        <title>Hello World</title>
        <description>&lt;p&gt;I’ve written blog in &lt;a href=&quot;http://coderwall.com&quot;&gt;Coderwall&lt;/a&gt; but I think it’s better if I own a blog :)&lt;/p&gt;

&lt;p&gt;In addition, I’ll transfer these &lt;a href=&quot;https://coderwall.com/p/u/vumanhcuongit&quot;&gt;tips&lt;/a&gt; from &lt;a href=&quot;http://coderwall.com&quot;&gt;Coderwall&lt;/a&gt; to here.&lt;/p&gt;

&lt;p&gt;I’m using Jekyll and the free Github’s hosting. Moreover, I don’t know how to set up tags and categories for this blog now. Maybe I’ll fix it in the future :).&lt;/p&gt;

&lt;p&gt;By the way, Welcome to my blog !&lt;/p&gt;

</description>
        <pubDate>Wed, 27 Aug 2014 00:00:00 +0700</pubDate>
        <link>http://vumanhcuongit.github.io/2014/08/27/hello-world/</link>
        <guid isPermaLink="true">http://vumanhcuongit.github.io/2014/08/27/hello-world/</guid>
      </item>
    
  </channel>
</rss>
